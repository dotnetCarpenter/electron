From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Samuel Attard <sattard@slack-corp.com>
Date: Mon, 15 Jul 2019 14:20:10 -0700
Subject: 
 fix_extern_the_nativemoduleenv_and_options_parser_for_debug_builds.patch

diff --git a/src/node_native_module_env.h b/src/node_native_module_env.h
index b91a5059cd1f19d87e5876c372f3ded60681a5df..f81cf8dfb892a8ddd9084c5d9477b17867cae82d 100644
--- a/src/node_native_module_env.h
+++ b/src/node_native_module_env.h
@@ -12,7 +12,7 @@ namespace native_module {
 
 extern const bool has_code_cache;
 
-class NativeModuleEnv {
+class NODE_EXTERN NativeModuleEnv {
  public:
   static void Initialize(v8::Local<v8::Object> target,
                          v8::Local<v8::Value> unused,
diff --git a/src/node_options.cc b/src/node_options.cc
index c3263b5cc588c67aecd411e51975f36ec649a1e9..cb7265f85adf46c9ade4c8db8f95c3c03e1e9920 100644
--- a/src/node_options.cc
+++ b/src/node_options.cc
@@ -237,7 +237,7 @@ const EnvironmentOptionsParser _eop_instance{_dop_instance};
 
 // This Parse is not dead code. It is used by embedders (e.g., Electron).
 template <>
-void Parse(
+void NODE_EXTERN Parse(
   StringVector* const args, StringVector* const exec_args,
   StringVector* const v8_args,
   DebugOptions* const options,
diff --git a/src/node_options.h b/src/node_options.h
index ce86827024126c6b0d8462c811360057c298ec5b..d53307f9589d4487c220526b8e49b6c7fbd29daf 100644
--- a/src/node_options.h
+++ b/src/node_options.h
@@ -44,7 +44,7 @@ class HostPort {
   int port_;
 };
 
-class Options {
+class NODE_EXTERN Options {
  public:
   virtual void CheckOptions(std::vector<std::string>* errors) {}
   virtual ~Options() = default;
@@ -440,7 +440,7 @@ class NODE_EXTERN DebugOptionsParser : public OptionsParser<DebugOptions> {
 
 using StringVector = std::vector<std::string>;
 template <class OptionsType, class = Options>
-void Parse(
+void NODE_EXTERN Parse(
   StringVector* const args, StringVector* const exec_args,
   StringVector* const v8_args, OptionsType* const options,
   OptionEnvvarSettings required_env_settings, StringVector* const errors);
