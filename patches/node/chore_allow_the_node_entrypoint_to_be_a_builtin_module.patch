From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Samuel Attard <samuel.r.attard@gmail.com>
Date: Mon, 3 Jun 2019 01:05:58 -0700
Subject: chore_allow_the_node_entrypoint_to_be_a_builtin_module.patch

This floats two patches onto the node 12 branch that I don't think we can upstream.

The default behavior of node is to `path.resolve(firstArg)` to figure out what JS file to load.
Issue here is that we use that for `browser/init.js` which now doesn't exist on disk.
This adds an exception that won't affect user code to allow node to boot-up internal
modules (in this case anything in the `electron/js2c` scope.

Similar to the above, the loader uses `process.argv[1]` to figure out when to break for
`--inspect-brk` this updates the logic to use an Electron provided `process._firstFileName`.

diff --git a/lib/internal/bootstrap/pre_execution.js b/lib/internal/bootstrap/pre_execution.js
index 8773e37c5ca0152e79efd59613e5f22d675e1ea9..58e50992f231e41722124389a9b0578c2a6d387b 100644
--- a/lib/internal/bootstrap/pre_execution.js
+++ b/lib/internal/bootstrap/pre_execution.js
@@ -71,8 +71,10 @@ function patchProcessObject(expandArgv1) {
 
   if (expandArgv1 && process.argv[1] && !process.argv[1].startsWith('-')) {
     // Expand process.argv[1] into a full path.
+    if (!process.argv[1] || !process.argv[1].startsWith('electron/js2c')) {
     const path = require('path');
     process.argv[1] = path.resolve(process.argv[1]);
+    }
   }
 
   // TODO(joyeecheung): most of these should be deprecated and removed,
diff --git a/lib/internal/modules/cjs/loader.js b/lib/internal/modules/cjs/loader.js
index 49c3f0bdd6cef493b6e627502bd2e02fee1f08a4..be42275d1092241f571b5b2e5b453a63e8b5bb1e 100644
--- a/lib/internal/modules/cjs/loader.js
+++ b/lib/internal/modules/cjs/loader.js
@@ -913,6 +913,13 @@ Module.prototype._compile = function(content, filename) {
   if (getOptionValue('--inspect-brk') && process._eval == null) {
     if (!resolvedArgv) {
       // We enter the repl if we're not given a filename argument.
+      // process._firstFileName is used by Embedders to tell node what
+      // the first "real" file is when they use themselves as the entry
+      // point
+      if (process._firstFileName) {
+        resolvedArgv = process._firstFileName
+        delete process._firstFileName
+      } else
       if (process.argv[1]) {
         resolvedArgv = Module._resolveFilename(process.argv[1], null, false);
       } else {
